class Prototype(object):
    value = 'Клон'

    def clone(self, **attrs):
        """Клонирование картины и запись в список"""
        picture_obj = self.__class__()
        picture_obj.__dict__.update(attrs)
        return picture_obj


class PrototypeDispatcher(object):
    def __init__(self):
        self._objects = {}

    def get_picture_obj(self):
        return self._objects

    def register_picture_obj(self, name, picture_obj):
        self._objects[name] = picture_obj

    def unregister_picture_obj(self, name):
        del self._objects[name]


if __name__ == '__main__':
    dispatcher = PrototypeDispatcher()
    prototype = Prototype()

    picture_obj1 = prototype.clone()
    picture_obj2 = prototype.clone(value='Клон 2', category='a')
    picture_obj3 = prototype.clone(value='Клон 3', is_checked=True)
    dispatcher.register_picture_obj('Оригинал', picture_obj1)
    dispatcher.register_picture_obj('Картина 2', picture_obj2)
    dispatcher.register_picture_obj('Картина 3', picture_obj3)

    for k, v in dispatcher.get_picture_obj().items():
        print(k + ':' + v.value)
